package model.user;

public abstract class Human {
    private int id; //Auto-generated by DB, no setter
    private String name;
    private String email;
    private String phone;

    // Single constructor for all cases
    public Human(String name, String email, String phone) {
        setName(name);
        setEmail(email);
        setPhone(phone);
    }

    // Getters
    public int getId() { return id; }
    public String getName() { return name; }
    public String getEmail() { return email; }
    public String getPhone() { return phone; }
    
    // Validated setters
    public void setId(int id) { //!!!! Look for "ID cannot be modified after initialization"
        if (this.id != 0) throw new IllegalStateException("ID already set");
        if (id <= 0) throw new IllegalArgumentException("Invalid ID");
        this.id = id;
    }

    public void setName(String name) {
        if (name == null || name.trim().isEmpty()) {
            throw new IllegalArgumentException("Name cannot be empty");
        }
        this.name = name.trim();
    }

    public void setEmail(String email) {
        if (!email.contains("@")) throw new IllegalArgumentException("Invalid email");
        this.email = email;
    }

    public void setPhone(String phone) {
        if (phone == null) {
            throw new IllegalArgumentException("Phone number cannot be null");
        }
        
        String cleaned = phone.replaceAll("[^0-9]", "");
        
        if (cleaned.length() < 9) {
            throw new IllegalArgumentException("Phone must contain at least 9 digits. Provided: " + cleaned);
        }
        
        this.phone = cleaned;
    }
}